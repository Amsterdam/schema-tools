[metadata]
name = amsterdam-schema-tools
version = 0.18.1
url = https://github.com/amsterdam/schema-tools
license = Mozilla Public 2.0
author = Amsterdam Data en Informatie
author_email = datapunt@amsterdam.nl
description = Tools to work with Amsterdam schema.
long_description = file: README.md
long_description_content_type = text/markdown
classifiers =
    Development Status :: 2 - Pre-Alpha
    License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)
    Programming Language :: Python
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
[options]
packages = find:
python_requires = >= 3.7
install_requires =
    sqlalchemy ~= 1.3.23
    geoalchemy2
    psycopg2
    pg-grant
    click
    deepdiff
    jsonschema
    ndjson>=0.3.0
    shapely
    python-string-utils
    python-dateutil
    requests
    jinja2
    mappyfile
    cachetools
    jsonpath-rw
    pg-grant
    simple-singleton
tests_require=
    pytest
    pytest-cov
    pytest-sqlalchemy
    requests-mock

[options.packages.find]
exclude =
    tests

[options.extras_require]
tests =
    mypy
    flake8
    flake8-bandit  # security checks
    flake8-bugbear  # assorted opinionated checks
    flake8-builtins  # check for name collision with builtins
    flake8-comprehensions
    flake8-docstrings
    flake8-implicit-str-concat
    flake8-print
    flake8-rst  # Allows run flake8 on code snippets in docstrings or rst files
    flake8-string-format
    pytest
    pytest-cov
    pytest-django
    pytest-sqlalchemy
    requests-mock
django =
    django >= 3.0
    django-postgres-unlimited-varchar >= 1.1.0
    django-gisserver >= 0.5
    django-environ

[options.entry_points]
console_scripts =
    schema = schematools.cli:main
    django = schematools.contrib.django.cli:main

[bdist_wheel]
universal = 1

[tool:pytest]
testpaths =
    tests
    tests_django
DJANGO_SETTINGS_MODULE = tests_django.settings
norecursedirs =
    .tox
    .git
    dist
    build
    venv
    .venv
filterwarnings =
    once::DeprecationWarning
    once::PendingDeprecationWarning
addopts = --doctest-modules

[flake8]
# A = builtins
# B = bugbear
# C = comprehensions
# D = docstrings
# E = pycodestyle errors, rst
# F = flake8 pyflakes, rst
# G = logging-format
# P = str-format
# RST = rst-docstrings
# S = bandit
# T = print
# W = pycodestyle warnings
# B9 = bugbear opinions
# ISC = implicit-str-concat
ban-relative-imports = True
max-line-length = 99
statistics=True
# We should be using the following `select` line
# but as that generates way too many warnings we
# start with a smaller subset. However we should be gradually
# moving to more and strict checks.
# select = A, B, C, D, E, F, G, P, RST, S, T, W, B9, ISC
select = B, C, D, E, F, G, RST, W, B9, ISC
doctests = True
ignore=
    E203  # Black may add spaces in slice[func(v) : end] syntax
    E231  # Black leaves commas after combining lines
    F403  # Allow import * (for settings)
    F405  # Allow import * (for settings)
    E731  # Allow lambdas:
    W503  # line break before binary operator (incompatible with black):
    R102  # Allow raise Exception()
exclude=
    .git
    **/migrations/*
    docs
    scripts
    .cache
    .eggs
    __pycache__
    build
    dist
    .venv
    venv
